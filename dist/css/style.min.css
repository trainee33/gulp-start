@charset "UTF-8";@font-face{font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-Bold.woff) format("woff"),url(../fonts/Montserrat-Bold.woff2) format("woff2");font-weight:700;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-Medium.woff) format("woff"),url(../fonts/Montserrat-Medium.woff2) format("woff2");font-weight:500;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-SemiBold.woff) format("woff"),url(../fonts/Montserrat-SemiBold.woff2) format("woff2");font-weight:600;font-style:normal}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,ins,kbd,label,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}img{margin:0;padding:0;font:inherit}fieldset,figure,form,legend{font:inherit;vertical-align:baseline}figure,form{padding:0;border:0}legend{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{width:100%;min-width:320px;color:#000;font-size:16px;line-height:17px;font-family:"Montserrat",sans-serif;font-weight:400}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-moz-appearance:none}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus,button:focus,input:focus,option:focus,select:focus,textarea:focus{outline:0;-webkit-box-shadow:0 0 0 2px #87cefa;box-shadow:0 0 0 2px #87cefa}a:active,a:hover,button:active,button:hover,select:active,select:hover{outline:0;-webkit-box-shadow:none;box-shadow:none}img{border:0;-ms-interpolation-mode:bicubic;vertical-align:middle}fieldset,legend{border:0;padding:0}fieldset,figure,form{margin:0}legend{white-space:normal;*margin-left:-7px}button,input,select{vertical-align:baseline}button,input,select,textarea{font-size:100%;margin:0;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box;margin:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}button,html,input,select,textarea{color:#000}::-moz-selection{background-color:#b3d4fc;text-shadow:none}::selection{background-color:#b3d4fc;text-shadow:none}textarea{resize:vertical}.chromeframe{margin:.2em 0;background-color:#ccc;color:#000;padding:.2em 0}.wrapper{max-width:1170px;margin:0 auto;padding-left:30px;padding-right:30px}html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}a{outline:0;text-decoration:none;list-style:none}.hidden{visibility:hidden}*,::after,::before,picture{-webkit-box-sizing:border-box;box-sizing:border-box}input[type=email],input[type=tel],input[type=text],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}.input,input{width:100%;display:block;border:0;padding:0 20px}textarea.input{resize:none;padding:0}._ibg{position:relative}._ibg img{position:absolute;width:100%;height:100%;top:0;left:0;-o-object-fit:cover;object-fit:cover}body._lock,picture{overflow:hidden}body._ie ._ibg{background-position:center;background-size:cover;background-repeat:no-repeat}body._ie ._ibg img{width:0;height:0;opacity:0;visibility:hidden}.btn-reset{border:0;background-color:transparent;padding:0;margin:0;cursor:pointer}.visibility-hidden{visibility:hidden}.btn{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;padding:24px 34px;background-color:#ff7900;-webkit-box-shadow:0 4px 15px rgba(0,0,0,.12);box-shadow:0 4px 15px rgba(0,0,0,.12);border-radius:60px;color:#fff;font-weight:700;font-size:11px;line-height:13px;letter-spacing:.04em;text-transform:uppercase;-ms-flex-item-align:start;align-self:start;-webkit-transition:background-color .3s ease 0s;-o-transition:background-color .3s ease 0s;transition:background-color .3s ease 0s}._title{font-weight:800;font-size:38px;line-height:50px;color:#000}._title span{color:#00adef}.rub:after{content:"â‚½";font-size:18px}[class*=copyrights-pane]{display:none!important}.header{background:#fff}.header h1{font-size:35px;font-weight:700;margin-top:40px;display:block;color:red}.menu__list{padding:50px 0 0;margin:0 0 50px}.menu__item:not(:last-child){margin:0 20px 0 0}.menu__link{font-weight:700;font-size:16px;line-height:20px;letter-spacing:.04em;text-transform:uppercase;color:#888}@media (max-width:1170px){._title{font-size:calc(30px + 8*((100vw - 320px)/850))}}@media (max-width:1100px){.menu__body{position:fixed;width:100%;height:100%;top:0;left:-100%;overflow:auto;background-color:#e5e5e5;-webkit-transition:left .3s ease 0s;-o-transition:left .3s ease 0s;transition:left .3s ease 0s;padding:70px 15px 30px;text-align:center;z-index:3}.menu__body._active{left:0}}@media screen and (max-width:768px){.wrapper{padding-left:15px;padding-right:15px}}@media (any-hover:hover){.btn:hover{background-color:#d46504}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */